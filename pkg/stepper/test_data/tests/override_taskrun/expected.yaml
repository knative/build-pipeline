apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  creationTimestamp: null
  generateName: my-pipeline-
spec:
  serviceAccountName: default
  taskSpec:
    steps:
    - env:
      - name: MY_NEW_ENV_VAR
        value: this-is-a-new-value
      image: ghcr.io/jenkins-x/jx-boot:3.1.285
      name: jx-variables
      resources: {}
      script: |
        #!/usr/bin/env sh
        jx gitops variables
    - image: golang:1.15
      name: build-make-build
      resources: {}
      script: |
        #!/usr/bin/env sh
        echo "this is my custom script"
      workingDir: /workspace/mynewdir
    - args:
      - -c
      - echo this is a new custom command
      command:
      - bash
      image: gcr.io/kaniko-project/executor:debug-v1.3.0
      name: build-container-build
      resources: {}
    - envFrom:
      - configMapRef:
          name: myconfigmap
          optional: true
      image: gcr.io/jenkinsxio/jx-changelog:0.0.34
      name: promote-changelog
      resources: {}
      script: |
        #!/usr/bin/env sh
        source .jx/variables.sh

        if [ -d "charts/$REPO_NAME" ]; then
        sed -i -e "s/^version:.*/version: $VERSION/" ./charts/$REPO_NAME/Chart.yaml
        sed -i -e "s/repository:.*/repository: $DOCKER_REGISTRY\/$DOCKER_REGISTRY_ORG\/$APP_NAME/" ./charts/$REPO_NAME/values.yaml
        sed -i -e "s/tag:.*/tag: $VERSION/" ./charts/$REPO_NAME/values.yaml;
        else echo no charts; fi

        git add * || true
        git commit -a -m "chore: release $VERSION" --allow-empty
        git tag -fa v$VERSION -m "Release version $VERSION"
        git push --force origin v$VERSION

        jx changelog create --version v${VERSION}
    - image: ghcr.io/jenkins-x/jx-promote:0.0.240
      name: promote-jx-promote
      resources: {}
      script: |
        #!/usr/bin/env sh
        source .jx/variables.sh
        jx promote -b --all --timeout 1h --no-poll
      volumeMounts:
      - mountPath: /foo/bar
        name: my-new-volume
status:
  podName: ""
