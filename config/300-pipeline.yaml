# Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pipelines.tekton.dev
spec:
  group: tekton.dev
  names:
    kind: Pipeline
    plural: pipelines
    categories:
    - all
    - tekton-pipelines
  scope: Namespaced
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1
  "validation":
    "openAPIV3Schema":
      description: Pipeline describes a list of Tasks to execute. It expresses how
        outputs of tasks feed into inputs of subsequent tasks.
      type: object
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec holds the desired state of the Pipeline from the client
          type: object
          properties:
            params:
              description: Params declares a list of input parameters that must be
                supplied when this Pipeline is run.
              type: array
              items:
                description: ParamSpec defines arbitrary parameters needed beyond
                  typed inputs (such as resources). Parameter values are provided
                  by users as inputs on a TaskRun or PipelineRun.
                type: object
                required:
                - name
                properties:
                  default:
                    description: Default is the value a parameter takes if no input
                      value is supplied. If default is set, a Task may be executed
                      without a supplied value for the parameter.
                    type: object
                    required:
                    - type
                    properties:
                      type:
                        description: ParamType indicates the type of an input parameter;
                          Used to distinguish between a single string and an array
                          of strings.
                        type: string
                  description:
                    description: Description is a user-facing description of the parameter
                      that may be used to populate a UI.
                    type: string
                  name:
                    description: Name declares the name by which a parameter is referenced.
                    type: string
                  type:
                    description: Type is the user-specified type of the parameter.
                      The possible types are currently "string" and "array", and "string"
                      is the default.
                    type: string
            resources:
              description: Resources declares the names and types of the resources
                given to the Pipeline's tasks as inputs and outputs.
              type: array
              items:
                description: PipelineDeclaredResource is used by a Pipeline to declare
                  the types of the PipelineResources that it will required to run
                  and names which can be used to refer to these PipelineResources
                  in PipelineTaskResourceBindings.
                type: object
                required:
                - name
                - type
                properties:
                  name:
                    description: Name is the name that will be used by the Pipeline
                      to refer to this resource. It does not directly correspond to
                      the name of any PipelineResources Task inputs or outputs, and
                      it does not correspond to the actual names of the PipelineResources
                      that will be bound in the PipelineRun.
                    type: string
                  type:
                    description: Type is the type of the PipelineResource.
                    type: string
            tasks:
              description: Tasks declares the graph of Tasks that execute when this
                Pipeline is run.
              type: array
              items:
                description: PipelineTask defines a task in a Pipeline, passing inputs
                  from both Params and from the output of previous tasks.
                type: object
                required:
                - taskRef
                properties:
                  conditions:
                    description: Conditions is a list of conditions that need to be
                      true for the task to run
                    type: array
                    items:
                      description: PipelineTaskCondition allows a PipelineTask to
                        declare a Condition to be evaluated before the Task is run.
                      type: object
                      required:
                      - conditionRef
                      properties:
                        conditionRef:
                          description: ConditionRef is the name of the Condition to
                            use for the conditionCheck
                          type: string
                        params:
                          description: Params declare parameters passed to this Condition
                          type: array
                          items:
                            description: Param declares an ArrayOrString to use for
                              the parameter called name.
                            type: object
                            required:
                            - name
                            - value
                            properties:
                              name:
                                type: string
                              value:
                                description: ArrayOrString is a type that can hold
                                  a single string or string array. Used in JSON unmarshalling
                                  so that a single JSON field can accept either an
                                  individual string or an array of strings.
                                type: object
                                required:
                                - type
                                properties:
                                  type:
                                    description: ParamType indicates the type of an
                                      input parameter; Used to distinguish between
                                      a single string and an array of strings.
                                    type: string
                        resources:
                          description: Resources declare the resources provided to
                            this Condition as input
                          type: array
                          items:
                            description: PipelineConditionResource allows a Pipeline
                              to declare how its DeclaredPipelineResources should
                              be provided to a Condition as its inputs.
                            type: object
                            required:
                            - name
                            - resource
                            properties:
                              name:
                                description: Name is the name of the PipelineResource
                                  as declared by the Condition.
                                type: string
                              resource:
                                description: Resource is the name of the DeclaredPipelineResource
                                  to use.
                                type: string
                  name:
                    description: Name is the name of this task within the context
                      of a Pipeline. Name is used as a coordinate with the `from`
                      and `runAfter` fields to establish the execution order of tasks
                      relative to one another.
                    type: string
                  params:
                    description: Parameters declares parameters passed to this task.
                    type: array
                    items:
                      description: Param declares an ArrayOrString to use for the
                        parameter called name.
                      type: object
                      required:
                      - name
                      - value
                      properties:
                        name:
                          type: string
                        value:
                          description: ArrayOrString is a type that can hold a single
                            string or string array. Used in JSON unmarshalling so
                            that a single JSON field can accept either an individual
                            string or an array of strings.
                          type: object
                          required:
                          - type
                          properties:
                            type:
                              description: ParamType indicates the type of an input
                                parameter; Used to distinguish between a single string
                                and an array of strings.
                              type: string
                  resources:
                    description: Resources declares the resources given to this task
                      as inputs and outputs.
                    type: object
                    properties:
                      inputs:
                        description: Inputs holds the mapping from the PipelineResources
                          declared in DeclaredPipelineResources to the input PipelineResources
                          required by the Task.
                        type: array
                        items:
                          description: PipelineTaskInputResource maps the name of
                            a declared PipelineResource input dependency in a Task
                            to the resource in the Pipeline's DeclaredPipelineResources
                            that should be used. This input may come from a previous
                            task.
                          type: object
                          required:
                          - name
                          - resource
                          properties:
                            from:
                              description: From is the list of PipelineTask names
                                that the resource has to come from. (Implies an ordering
                                in the execution graph.)
                              type: array
                              items:
                                type: string
                            name:
                              description: Name is the name of the PipelineResource
                                as declared by the Task.
                              type: string
                            resource:
                              description: Resource is the name of the DeclaredPipelineResource
                                to use.
                              type: string
                      outputs:
                        description: Outputs holds the mapping from the PipelineResources
                          declared in DeclaredPipelineResources to the input PipelineResources
                          required by the Task.
                        type: array
                        items:
                          description: PipelineTaskOutputResource maps the name of
                            a declared PipelineResource output dependency in a Task
                            to the resource in the Pipeline's DeclaredPipelineResources
                            that should be used.
                          type: object
                          required:
                          - name
                          - resource
                          properties:
                            name:
                              description: Name is the name of the PipelineResource
                                as declared by the Task.
                              type: string
                            resource:
                              description: Resource is the name of the DeclaredPipelineResource
                                to use.
                              type: string
                  retries:
                    description: 'Retries represents how many times this task should
                      be retried in case of task failure: ConditionSucceeded set to
                      False'
                    type: integer
                  runAfter:
                    description: RunAfter is the list of PipelineTask names that should
                      be executed before this Task executes. (Used to force a specific
                      ordering in graph execution.)
                    type: array
                    items:
                      type: string
                  taskRef:
                    description: TaskRef is a reference to a task definition.
                    type: object
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: TaskKind inficates the kind of the task, namespaced
                          or cluster scoped.
                        type: string
                      name:
                        description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
        status:
          description: Status is deprecated. It usually is used to communicate the
            observed state of the Pipeline from the controller, but was unused as
            there is no controller for Pipeline.
          type: object
