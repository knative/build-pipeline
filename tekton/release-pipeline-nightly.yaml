apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline-release-nightly
spec:
  params:
  - name: package
    description: package to release
    default: github.com/tektoncd/pipeline
  - name: imageRegistry
    default: gcr.io/tekton-nightly
  - name: gitUrl
    description: The git url to use to clone the source
  - name: gitCommit
    description: The git commit hash that will be tagged with the release
  - name: versionTag
    description: The X.Y.Z version that the artifacts should be tagged with
  resources:
  - name: bucket
    type: storage
  - name: builtBaseImage
    type: image
  - name: builtEntrypointImage
    type: image
  - name: builtNopImage
    type: image
  - name: builtKubeconfigWriterImage
    type: image
  - name: builtCredsInitImage
    type: image
  - name: builtGitInitImage
    type: image
  - name: builtControllerImage
    type: image
  - name: builtWebhookImage
    type: image
  - name: builtDigestExporterImage
    type: image
  - name: builtPullRequestInitImage
    type: image
  - name: builtGcsFetcherImage
    type: image
  - name: notification
    type: cloudEvent
  workspaces:
  - name: shared-data
    description: |
      This workspace will receive the cloned git repo and be passed
      to the next Task for the commit to be checked.
  tasks:
    - name: fetch-repo
      taskRef:
        name: git-clone
      params:
      - name: url
        value: $(params.gitUrl)
      - name: revision
        value: $(params.gitCommit)
      - name: deleteExisting
        value: "true"
      workspaces:
      - name: output
        workspace: shared-data
    - name: unit-tests
      taskRef:
        name: golang-test
      runAfter: [fetch-repo]
      params:
        - name: package
          value: $(params.package)
      workspaces:
      - name: source
        workspace: shared-data
    - name: build
      taskRef:
        name: golang-build
      runAfter: [fetch-repo]
      params:
        - name: package
          value: $(params.package)
      workspaces:
      - name: source
        workspace: shared-data
    - name: publish-images
      runAfter: [build, unit-tests]
      taskRef:
        name: publish-tekton-pipelines
      params:
        - name: pathToProject
          value: $(params.package)
        - name: versionTag
          value: $(params.versionTag)
        - name: imageRegistry
          value: $(params.imageRegistry)
      workspaces:
      - name: source
        workspace: shared-data
      resources:
        inputs:
          - name: bucket
            resource: bucket
        outputs:
          - name: bucket
            resource: bucket
          - name: builtBaseImage
            resource: builtBaseImage
          - name: builtEntrypointImage
            resource: builtEntrypointImage
          - name: builtNopImage
            resource: builtNopImage
          - name: builtKubeconfigWriterImage
            resource: builtKubeconfigWriterImage
          - name: builtCredsInitImage
            resource: builtCredsInitImage
          - name: builtGitInitImage
            resource: builtGitInitImage
          - name: builtControllerImage
            resource: builtControllerImage
          - name: builtWebhookImage
            resource: builtWebhookImage
          - name: builtDigestExporterImage
            resource: builtDigestExporterImage
          - name: builtPullRequestInitImage
            resource: builtPullRequestInitImage
          - name: builtGcsFetcherImage
            resource: builtGcsFetcherImage
          - name: notification
            resource: notification
